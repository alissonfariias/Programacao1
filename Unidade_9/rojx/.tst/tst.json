{
  "files": {
    "public_tests.py": {
      "category": "public",
      "data": "import unittest\nimport sys\n\nundertest = __import__(sys.argv[-1].split(\".py\")[0])\nbusca_matriz = getattr(undertest, 'busca_matriz', None)\n\nclass PublicTests(unittest.TestCase):\n\n    def test_exemplo_1(self):\n        matriz = [\n            [2, 3, 5, 3, 1],\n            [3, 2, 1, 5, 6],\n            [1, 2, 3, 2, 1],\n        ]\n        assert busca_matriz(matriz, 4) == None\n        \nif __name__ == '__main__':\n    loader = unittest.TestLoader()\n    runner = unittest.TextTestRunner()\n    runner.run(loader.loadTestsFromModule(sys.modules[__name__]))\n",
      "name": "public_tests.py"
    },
    "matriz.py": {
      "category": "answer",
      "data": "# coding: utf-8\n# Universidade Federal de Campina Grande - UFCG\n# Programa\u00e7\u00e3o I - UFCG\n# Aluno: Walisson Nascimento de Farias\n# Matr\u00edcula: 117210716\n# Unidade: 9\tQuest\u00e3o: Busca em Matriz\n\nmatriz = [\n    [2, 3, 5, 3, 1],\n    [3, 2, 1, 5, 6],\n    [1, 2, 3, 2, 1],\n]\n\ndef busca_matriz(m, e):\n\tfor i in range(len(m)):\n\t\tfor j in range(len(m[i])):\n\t\t\tif m[i][j] == e:\n\t\t\t\treturn (i,j)\n\t\nassert busca_matriz(matriz, 4) == None\nassert busca_matriz(matriz, 3) == (0,1)\nassert busca_matriz(matriz, 1) == (0,4)\n",
      "name": "matriz.py"
    }
  },
  "kind": "assignment",
  "name": null,
  "checksum": "e55ce655c420ce8ea472bb73422400d3",
  "iid": 5794239388581888,
  "activity_revision": "1.0.0"
}